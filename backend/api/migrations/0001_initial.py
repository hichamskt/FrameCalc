# Generated by Django 5.2.3 on 2025-06-23 18:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='StructureSubType',
            fields=[
                ('subtype_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('typeimage', models.ImageField(blank=True, null=True, upload_to='structuresubType/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif'])])),
            ],
            options={
                'ordering': ['type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StructureType',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupplyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='User ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='api.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('supply_types', models.ManyToManyField(help_text='Types of supplies this company provides', related_name='companies', to='api.supplytype')),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('material_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('unit_type', models.CharField(max_length=20)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='materials/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='materials', to='api.category')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('supply_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplies', to='api.supplytype')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('profile_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('quality', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileAluminum',
            fields=[
                ('profile_material_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('unit_type', models.CharField(max_length=20)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference', models.CharField(max_length=20)),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('quotation_id', models.AutoField(primary_key=True, serialize=False)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='draft', max_length=20)),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.profile')),
            ],
        ),
        migrations.CreateModel(
            name='QuotationAluminumItem',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('profile_material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profilealuminum')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.quotation')),
            ],
        ),
        migrations.CreateModel(
            name='QuotationMaterialItem',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.material')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.quotation')),
            ],
        ),
        migrations.CreateModel(
            name='Sketch',
            fields=[
                ('sketch_id', models.AutoField(primary_key=True, serialize=False)),
                ('shape', models.CharField(max_length=50)),
                ('width', models.DecimalField(decimal_places=2, max_digits=10)),
                ('height', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='quotation',
            name='sketch',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.sketch'),
        ),
        migrations.AddField(
            model_name='quotation',
            name='subtype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.structuresubtype'),
        ),
        migrations.AddField(
            model_name='structuresubtype',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.structuretype'),
        ),
        migrations.CreateModel(
            name='SubtypeAccessoriesRequirement',
            fields=[
                ('accessoriesrequirement_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('companysupplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accessoriessupplier', to='api.company')),
                ('subtype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accessoriesrequirements', to='api.structuresubtype')),
            ],
            options={
                'verbose_name': 'Subtype Accessories Requirement',
                'verbose_name_plural': 'Subtype Accessories Requirements',
                'ordering': ['subtype', 'companysupplier'],
            },
        ),
        migrations.CreateModel(
            name='SubtypeGlasseRequirement',
            fields=[
                ('glassrequirement_id', models.AutoField(primary_key=True, serialize=False)),
                ('width', models.DecimalField(decimal_places=2, max_digits=10)),
                ('height', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('companysupplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='glassesupplier', to='api.company')),
                ('subtype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='glassrequirements', to='api.structuresubtype')),
            ],
            options={
                'ordering': ['subtype', 'companysupplier'],
            },
        ),
        migrations.CreateModel(
            name='SubtypeRequirement',
            fields=[
                ('requirement_id', models.AutoField(primary_key=True, serialize=False)),
                ('width', models.DecimalField(decimal_places=2, max_digits=10)),
                ('height', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtype_requirements', to='api.profile')),
                ('subtype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='api.structuresubtype')),
            ],
            options={
                'ordering': ['subtype', 'profile'],
            },
        ),
        migrations.CreateModel(
            name='MaterialRequirement',
            fields=[
                ('req_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.material')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.subtyperequirement')),
            ],
        ),
        migrations.CreateModel(
            name='AluminumRequirementItem',
            fields=[
                ('req_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('profile_material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirement_items', to='api.profilealuminum')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aluminum_items', to='api.subtyperequirement')),
            ],
            options={
                'ordering': ['requirement', '-created_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='structuresubtype',
            constraint=models.UniqueConstraint(fields=('type', 'name'), name='unique_subtype_name_per_type'),
        ),
        migrations.AddConstraint(
            model_name='subtypeaccessoriesrequirement',
            constraint=models.UniqueConstraint(fields=('subtype', 'companysupplier'), name='unique_accessories_requirement'),
        ),
        migrations.AddConstraint(
            model_name='subtypeglasserequirement',
            constraint=models.UniqueConstraint(fields=('subtype', 'companysupplier'), name='unique_glass_requirement_per_subtype_supplier'),
        ),
        migrations.AddConstraint(
            model_name='subtyperequirement',
            constraint=models.UniqueConstraint(fields=('subtype', 'profile'), name='unique_requirement_per_subtype_profile'),
        ),
        migrations.AddConstraint(
            model_name='aluminumrequirementitem',
            constraint=models.UniqueConstraint(fields=('requirement', 'profile_material'), name='unique_material_per_requirement', violation_error_message='Each requirement can only have one of each profile material'),
        ),
        migrations.AddConstraint(
            model_name='company',
            constraint=models.UniqueConstraint(fields=('user',), name='unique_user_company'),
        ),
    ]
